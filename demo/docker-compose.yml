services:
  # SCTX demo server
  sctx-demo:
    build:
      context: ..
      dockerfile: demo/Dockerfile
    ports:
      - "8080:8080"  # Health check port
      - "8443:8443"  # Main service port
      - "8444:8444"  # Admin port
    volumes:
      - ./certs:/app/certs:ro
      - ./demo-signing-key-ed25519.pem:/app/keys/demo-signing-key-ed25519.pem:ro
      - ./demo-signing-key-ecdsa.pem:/app/keys/demo-signing-key-ecdsa.pem:ro
      - ./demo-signing-public-ed25519.pem:/app/keys/demo-signing-public-ed25519.pem:ro
      - ./demo-signing-public-ecdsa.pem:/app/keys/demo-signing-public-ecdsa.pem:ro
    environment:
      - LOG_LEVEL=debug
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Test runner
  test-runner:
    image: alpine:latest
    depends_on:
      sctx-demo:
        condition: service_healthy
    volumes:
      - ./certs:/certs:ro
      - ./scripts:/scripts:ro
    working_dir: /
    command: sh -c "apk add --no-cache bash curl && /scripts/test-scenarios.sh"

  # Order Service - demonstrates service-to-service auth
  order-service:
    build:
      context: ..
      dockerfile: demo/services/order-service/Dockerfile
    depends_on:
      sctx-demo:
        condition: service_healthy
    volumes:
      - ./certs:/app/certs:ro
      - ./demo-signing-public-ed25519.pem:/app/keys/demo-signing-public-ed25519.pem:ro
      - ./demo-signing-public-ecdsa.pem:/app/keys/demo-signing-public-ecdsa.pem:ro
    environment:
      - SCTX_SERVER=https://sctx-demo:8443
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Payment Service - demonstrates permission-based access
  payment-service:
    build:
      context: ..
      dockerfile: demo/services/payment-service/Dockerfile
    depends_on:
      sctx-demo:
        condition: service_healthy
    volumes:
      - ./certs:/app/certs:ro
      - ./demo-signing-public-ed25519.pem:/app/keys/demo-signing-public-ed25519.pem:ro
      - ./demo-signing-public-ecdsa.pem:/app/keys/demo-signing-public-ecdsa.pem:ro
    environment:
      - SCTX_SERVER=https://sctx-demo:8443
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Integration test runner - tests service-to-service flows
  integration-test:
    image: alpine:latest
    depends_on:
      order-service:
        condition: service_healthy
      payment-service:
        condition: service_healthy
    volumes:
      - ./certs:/certs:ro
      - ./scripts:/scripts:ro
    working_dir: /
    command: sh -c "apk add --no-cache bash curl && echo 'Running integration tests...' && /scripts/test-microservices.sh"
    profiles:
      - test

  # Interactive client for manual testing
  test-client:
    image: alpine:latest
    depends_on:
      sctx-demo:
        condition: service_healthy
      order-service:
        condition: service_healthy
      payment-service:
        condition: service_healthy
    volumes:
      - ./certs:/certs:ro
    working_dir: /
    command: >
      sh -c "apk add --no-cache bash curl openssl &&
      echo 'Interactive client ready. Services available:' &&
      echo '- SCTX Server: https://sctx-demo:8443' &&
      echo '- Order Service: https://order-service:8080' &&
      echo '- Payment Service: https://payment-service:8080' &&
      echo 'Client certs in /certs/' &&
      tail -f /dev/null"
    profiles:
      - interactive

